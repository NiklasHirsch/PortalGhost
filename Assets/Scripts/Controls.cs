//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""FreeMoveCamera"",
            ""id"": ""99860ce7-1128-41e1-8710-60202a2d6f31"",
            ""actions"": [
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""ea0c0f59-8122-4e70-8cbb-1992d48e41b9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""e7bc3e4d-bf92-4897-b274-4ab575f4ced5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CreatePortal"",
                    ""type"": ""Button"",
                    ""id"": ""a7da14ca-d8cf-4224-acb3-a902fb0b97a3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CreatePortalTwo"",
                    ""type"": ""Button"",
                    ""id"": ""e859fbeb-8e87-41f6-b6d7-49c44b658343"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d84337b2-c7ea-4288-bb39-2153c7071855"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""9e4683a1-df0e-4a91-a840-adbd7342b412"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""cd53ea98-67c3-49fa-9f53-371d148e2d31"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a793541e-5c5c-4ab5-a243-d150450dca5c"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f97b922a-03cc-4f63-8822-a2f07f32d07c"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""31ca5f3d-b0df-49af-88f4-d9a79b3748e1"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""cb2b70f1-1f0e-4341-bf87-81b61e57665c"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CreatePortal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""09983142-4dac-4fb3-8cff-bfdd3f5021ef"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CreatePortalTwo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // FreeMoveCamera
        m_FreeMoveCamera = asset.FindActionMap("FreeMoveCamera", throwIfNotFound: true);
        m_FreeMoveCamera_Look = m_FreeMoveCamera.FindAction("Look", throwIfNotFound: true);
        m_FreeMoveCamera_Move = m_FreeMoveCamera.FindAction("Move", throwIfNotFound: true);
        m_FreeMoveCamera_CreatePortal = m_FreeMoveCamera.FindAction("CreatePortal", throwIfNotFound: true);
        m_FreeMoveCamera_CreatePortalTwo = m_FreeMoveCamera.FindAction("CreatePortalTwo", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // FreeMoveCamera
    private readonly InputActionMap m_FreeMoveCamera;
    private IFreeMoveCameraActions m_FreeMoveCameraActionsCallbackInterface;
    private readonly InputAction m_FreeMoveCamera_Look;
    private readonly InputAction m_FreeMoveCamera_Move;
    private readonly InputAction m_FreeMoveCamera_CreatePortal;
    private readonly InputAction m_FreeMoveCamera_CreatePortalTwo;
    public struct FreeMoveCameraActions
    {
        private @Controls m_Wrapper;
        public FreeMoveCameraActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Look => m_Wrapper.m_FreeMoveCamera_Look;
        public InputAction @Move => m_Wrapper.m_FreeMoveCamera_Move;
        public InputAction @CreatePortal => m_Wrapper.m_FreeMoveCamera_CreatePortal;
        public InputAction @CreatePortalTwo => m_Wrapper.m_FreeMoveCamera_CreatePortalTwo;
        public InputActionMap Get() { return m_Wrapper.m_FreeMoveCamera; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(FreeMoveCameraActions set) { return set.Get(); }
        public void SetCallbacks(IFreeMoveCameraActions instance)
        {
            if (m_Wrapper.m_FreeMoveCameraActionsCallbackInterface != null)
            {
                @Look.started -= m_Wrapper.m_FreeMoveCameraActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_FreeMoveCameraActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_FreeMoveCameraActionsCallbackInterface.OnLook;
                @Move.started -= m_Wrapper.m_FreeMoveCameraActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_FreeMoveCameraActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_FreeMoveCameraActionsCallbackInterface.OnMove;
                @CreatePortal.started -= m_Wrapper.m_FreeMoveCameraActionsCallbackInterface.OnCreatePortal;
                @CreatePortal.performed -= m_Wrapper.m_FreeMoveCameraActionsCallbackInterface.OnCreatePortal;
                @CreatePortal.canceled -= m_Wrapper.m_FreeMoveCameraActionsCallbackInterface.OnCreatePortal;
                @CreatePortalTwo.started -= m_Wrapper.m_FreeMoveCameraActionsCallbackInterface.OnCreatePortalTwo;
                @CreatePortalTwo.performed -= m_Wrapper.m_FreeMoveCameraActionsCallbackInterface.OnCreatePortalTwo;
                @CreatePortalTwo.canceled -= m_Wrapper.m_FreeMoveCameraActionsCallbackInterface.OnCreatePortalTwo;
            }
            m_Wrapper.m_FreeMoveCameraActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @CreatePortal.started += instance.OnCreatePortal;
                @CreatePortal.performed += instance.OnCreatePortal;
                @CreatePortal.canceled += instance.OnCreatePortal;
                @CreatePortalTwo.started += instance.OnCreatePortalTwo;
                @CreatePortalTwo.performed += instance.OnCreatePortalTwo;
                @CreatePortalTwo.canceled += instance.OnCreatePortalTwo;
            }
        }
    }
    public FreeMoveCameraActions @FreeMoveCamera => new FreeMoveCameraActions(this);
    public interface IFreeMoveCameraActions
    {
        void OnLook(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnCreatePortal(InputAction.CallbackContext context);
        void OnCreatePortalTwo(InputAction.CallbackContext context);
    }
}
